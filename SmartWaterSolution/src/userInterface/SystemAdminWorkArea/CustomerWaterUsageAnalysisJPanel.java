/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.SystemAdminWorkArea;

import business.EcoSystems;
import business.Utils.Utils;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.Customer.Customer;
import java.awt.CardLayout;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author ayush
 */
public class CustomerWaterUsageAnalysisJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerWaterUsageAnalysisJPanel
     */
   private JPanel userProcessContainer;
    private EcoSystems system;
     private  double commercialStorageTankUsage=0;
     private   double commercialRainWaterUsage=0;
     private   double residentialStorageTankUsage=0;
     private   double residentialRainWaterUsage=0;
     private    double totalStorageTankUsage=0;
     private   double totalRainWaterUsage=0;
    
   public CustomerWaterUsageAnalysisJPanel(JPanel userProcessContainer, EcoSystems system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        getUsage();
        
        storageLabel.setText(Double.toString(Utils.roundDouble(totalStorageTankUsage)));
        rainWaterLabel.setText(Double.toString(Utils.roundDouble(totalRainWaterUsage)));
        totalLabel.setText(Double.toString(Utils.roundDouble(totalStorageTankUsage+totalRainWaterUsage)));
        
        residentialStorageLabel.setText(Double.toString(Utils.roundDouble(residentialStorageTankUsage)));
        residentialRainWaterLabel.setText(Double.toString(Utils.roundDouble(residentialRainWaterUsage)));
        totalResidentialLabel.setText(Double.toString(Utils.roundDouble(residentialStorageTankUsage+residentialRainWaterUsage)));
        
        commercialStorageLabel.setText(Double.toString(Utils.roundDouble(commercialStorageTankUsage)));
        commercialRainWaterLabel.setText(Double.toString(Utils.roundDouble(commercialRainWaterUsage)));
        totalCommercialLabel.setText(Double.toString(Utils.roundDouble(commercialStorageTankUsage+commercialRainWaterUsage)));
    }
   public void getUsage()
    {
        for(Network n:system.getNetworkList())
        for(Enterprise e:n.getEnterpriseList().getEnterpriseList())
        {
            
                for(Customer c:e.getCustomerDirectory().getCustomerList())
                {
                    if(c.getCustomerType().equalsIgnoreCase("Residential"))
                    {
                        residentialStorageTankUsage = residentialStorageTankUsage + c.getStorageTankUtilization();
                        residentialRainWaterUsage = residentialRainWaterUsage + c.getRainWaterTankUtilization();
                    }
                    if(c.getCustomerType().equalsIgnoreCase("Commercial"))
                    {
                        commercialStorageTankUsage = commercialStorageTankUsage + c.getStorageTankUtilization();
                        commercialRainWaterUsage = commercialRainWaterUsage + c.getRainWaterTankUtilization();
                    }
                }
            
            
        }
        totalStorageTankUsage = commercialStorageTankUsage + residentialStorageTankUsage;
        totalRainWaterUsage = commercialRainWaterUsage + residentialRainWaterUsage;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        overviewTab = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        overallGraphBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        storageLabel = new javax.swing.JLabel();
        rainWaterLabel = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        residentialTab = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        totalResidentialLabel = new javax.swing.JLabel();
        residentialRainWaterLabel = new javax.swing.JLabel();
        residentialStorageLabel = new javax.swing.JLabel();
        residentialGraphBtn = new javax.swing.JButton();
        commercialTab = new javax.swing.JPanel();
        totalCommercialLabel = new javax.swing.JLabel();
        commercialRainWaterLabel = new javax.swing.JLabel();
        commercialStorageLabel = new javax.swing.JLabel();
        commercialGraphBtn = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        overviewTab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 102)));

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 20)); // NOI18N
        jLabel2.setText("Overview Of All the Customers");

        overallGraphBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        overallGraphBtn.setText("Graphical Representation");
        overallGraphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overallGraphBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel5.setText("Total Storage Tank Usage");

        jLabel6.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel6.setText("Total Rain Water Tank Usage");

        jLabel7.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel7.setText("Total Usage");

        storageLabel.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        storageLabel.setText("<value>");

        rainWaterLabel.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        rainWaterLabel.setText("<value>");

        totalLabel.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        totalLabel.setText("<value>");

        javax.swing.GroupLayout overviewTabLayout = new javax.swing.GroupLayout(overviewTab);
        overviewTab.setLayout(overviewTabLayout);
        overviewTabLayout.setHorizontalGroup(
            overviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(overviewTabLayout.createSequentialGroup()
                .addGroup(overviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(overviewTabLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(overviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(overallGraphBtn)
                            .addGroup(overviewTabLayout.createSequentialGroup()
                                .addGroup(overviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(55, 55, 55)
                                .addGroup(overviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(storageLabel)
                                    .addComponent(rainWaterLabel)
                                    .addComponent(totalLabel)))))
                    .addGroup(overviewTabLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        overviewTabLayout.setVerticalGroup(
            overviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(overviewTabLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(overviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(overviewTabLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7))
                    .addGroup(overviewTabLayout.createSequentialGroup()
                        .addComponent(storageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rainWaterLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalLabel)))
                .addGap(18, 18, 18)
                .addComponent(overallGraphBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addGap(31, 31, 31))
        );

        tabbedPane.addTab("Overview", overviewTab);

        residentialTab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 102)));

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jLabel3.setText("Residential Customer Analysis");

        jLabel8.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel8.setText("Total Storage Tank Usage");

        jLabel9.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel9.setText("Total Rain Water Tank Usage");

        jLabel10.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel10.setText("Total Usage");

        totalResidentialLabel.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        totalResidentialLabel.setText("<value>");

        residentialRainWaterLabel.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        residentialRainWaterLabel.setText("<value>");

        residentialStorageLabel.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        residentialStorageLabel.setText("<value>");

        residentialGraphBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        residentialGraphBtn.setText("Graphical Representation");
        residentialGraphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                residentialGraphBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout residentialTabLayout = new javax.swing.GroupLayout(residentialTab);
        residentialTab.setLayout(residentialTabLayout);
        residentialTabLayout.setHorizontalGroup(
            residentialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(residentialTabLayout.createSequentialGroup()
                .addGroup(residentialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(residentialTabLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(residentialTabLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(residentialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(residentialGraphBtn)
                            .addGroup(residentialTabLayout.createSequentialGroup()
                                .addGroup(residentialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(55, 55, 55)
                                .addGroup(residentialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(residentialStorageLabel)
                                    .addComponent(residentialRainWaterLabel)
                                    .addComponent(totalResidentialLabel))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        residentialTabLayout.setVerticalGroup(
            residentialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(residentialTabLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(residentialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(residentialTabLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10))
                    .addGroup(residentialTabLayout.createSequentialGroup()
                        .addComponent(residentialStorageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(residentialRainWaterLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalResidentialLabel)))
                .addGap(18, 18, 18)
                .addComponent(residentialGraphBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        tabbedPane.addTab("Residential", residentialTab);

        commercialTab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        totalCommercialLabel.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        totalCommercialLabel.setText("<value>");

        commercialRainWaterLabel.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        commercialRainWaterLabel.setText("<value>");

        commercialStorageLabel.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        commercialStorageLabel.setText("<value>");

        commercialGraphBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        commercialGraphBtn.setText("Graphical Representation");
        commercialGraphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commercialGraphBtnActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jLabel14.setText("Commercial Customer Analysis");

        jLabel15.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel15.setText("Total Storage Tank Usage");

        jLabel16.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel16.setText("Total Rain Water Tank Usage");

        jLabel17.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel17.setText("Total Usage");

        javax.swing.GroupLayout commercialTabLayout = new javax.swing.GroupLayout(commercialTab);
        commercialTab.setLayout(commercialTabLayout);
        commercialTabLayout.setHorizontalGroup(
            commercialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commercialTabLayout.createSequentialGroup()
                .addGroup(commercialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(commercialTabLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(commercialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(commercialTabLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(commercialTabLayout.createSequentialGroup()
                                .addGroup(commercialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17))
                                .addGap(64, 64, 64)
                                .addGroup(commercialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(commercialStorageLabel)
                                    .addComponent(commercialRainWaterLabel)
                                    .addComponent(totalCommercialLabel)))))
                    .addGroup(commercialTabLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(commercialGraphBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        commercialTabLayout.setVerticalGroup(
            commercialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commercialTabLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(commercialTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(commercialTabLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17))
                    .addGroup(commercialTabLayout.createSequentialGroup()
                        .addComponent(commercialStorageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(commercialRainWaterLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalCommercialLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(commercialGraphBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Commercial", commercialTab);

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 20)); // NOI18N
        jLabel1.setText("Customer Water Usage Analysis");

        backJButton.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabbedPane)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(backBtn))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(219, 219, 219)
                    .addComponent(backJButton)
                    .addContainerGap(220, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(243, 243, 243)
                    .addComponent(backJButton)
                    .addContainerGap(126, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void overallGraphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overallGraphBtnActionPerformed
        // TODO add your handling code here:
        
        
        DefaultPieDataset dataset = new DefaultPieDataset();
        dataset.setValue("Storage Tank Utilization "+Utils.roundDouble(totalStorageTankUsage), Utils.roundDouble(totalStorageTankUsage));
        dataset.setValue("Rain Water Tank Utilization "+ Utils.roundDouble(totalRainWaterUsage), Utils.roundDouble(totalRainWaterUsage));
        JFreeChart chart = ChartFactory.createPieChart("Pie Chart", dataset);
       // CategoryPlot p = chart.getCategoryPlot();
        
        ChartFrame frame = new ChartFrame("Utilization Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(500, 400);
    }//GEN-LAST:event_overallGraphBtnActionPerformed

    private void residentialGraphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_residentialGraphBtnActionPerformed
        // TODO add your handling code here:
        DefaultPieDataset dataset = new DefaultPieDataset();
        dataset.setValue("Storage Tank Utilization "+Utils.roundDouble(residentialStorageTankUsage), Utils.roundDouble(residentialStorageTankUsage));
        dataset.setValue("Rain Water Tank Utilization "+ Utils.roundDouble(residentialRainWaterUsage), Utils.roundDouble(residentialRainWaterUsage));
        JFreeChart chart = ChartFactory.createPieChart("Pie Chart", dataset);
       // CategoryPlot p = chart.getCategoryPlot();
        
        ChartFrame frame = new ChartFrame("Utilization Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(500, 400);
    }//GEN-LAST:event_residentialGraphBtnActionPerformed

    private void commercialGraphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commercialGraphBtnActionPerformed
        // TODO add your handling code here:
        DefaultPieDataset dataset = new DefaultPieDataset();
        dataset.setValue("Storage Tank Utilization "+Utils.roundDouble(commercialStorageTankUsage), Utils.roundDouble(commercialStorageTankUsage));
        dataset.setValue("Rain Water Tank Utilization "+ Utils.roundDouble(commercialRainWaterUsage), Utils.roundDouble(commercialRainWaterUsage));
        JFreeChart chart = ChartFactory.createPieChart("Pie Chart", dataset);
       // CategoryPlot p = chart.getCategoryPlot();
        
        ChartFrame frame = new ChartFrame("Utilization Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(500, 400);
    }//GEN-LAST:event_commercialGraphBtnActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton commercialGraphBtn;
    private javax.swing.JLabel commercialRainWaterLabel;
    private javax.swing.JLabel commercialStorageLabel;
    private javax.swing.JPanel commercialTab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton overallGraphBtn;
    private javax.swing.JPanel overviewTab;
    private javax.swing.JLabel rainWaterLabel;
    private javax.swing.JButton residentialGraphBtn;
    private javax.swing.JLabel residentialRainWaterLabel;
    private javax.swing.JLabel residentialStorageLabel;
    private javax.swing.JPanel residentialTab;
    private javax.swing.JLabel storageLabel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JLabel totalCommercialLabel;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JLabel totalResidentialLabel;
    // End of variables declaration//GEN-END:variables
}
