/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Customer.Commercial;

import business.EcoSystems;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.CommercialMaintainenceUnitOrganization;
import business.organization.CommercialRainWaterHarvestingUnitOrganization;
import business.organization.EnergyOptimizationUnitOrganization;
import business.organization.Organization;
import business.userAccount.UserAccount;
import business.workqueue.EnergyOptimization.EnergyOptimizationRequest;
import business.workqueue.Maintainence.MaintainenceRequest;
import business.workqueue.RainWaterHarvesting.RainWaterHarvestingRequest;
import business.workqueue.WorkQueue;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import jdk.nashorn.internal.scripts.JO;
import userInterface.Customer.Residential.ViewResidentialCustomerProfileJPanel;

/**
 *
 * @author vinay
 */
public class CommercialCustomerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommercialCustomerWorkAreaJPanel
     */
    private EcoSystems business;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount account;
    private Organization organization;
    
    public CommercialCustomerWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise, Organization organization, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account = account;
        this.organization=(CommercialRainWaterHarvestingUnitOrganization)organization;
        if(!account.getCustomer().isIsRainWaterTankInstalled())
            rainWaterStorageTankTextField.setText("No");
        else
            rainWaterStorageTankTextField.setText("Yes");
        //System.out.println(""+account.getCustomer().getConsumer().getPumpConfiguration().getPumpConfigurationAddress());
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        energyOptRequestBtn = new javax.swing.JButton();
        trackUsageBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        rainWaterStorageTankTextField = new javax.swing.JLabel();
        summaryBtn = new javax.swing.JButton();
        myProfileBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 20)); // NOI18N
        jLabel1.setText("Commercial Customer Work Area Panel");

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        jLabel2.setText("All Requests");

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Status", "RequestType"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestTable);

        energyOptRequestBtn.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        energyOptRequestBtn.setText("Energy Optimization Request");
        energyOptRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                energyOptRequestBtnActionPerformed(evt);
            }
        });

        trackUsageBtn.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        trackUsageBtn.setText("Track My Water Usage");
        trackUsageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackUsageBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        jLabel3.setText("Rain Water Storage Tank installed:");

        rainWaterStorageTankTextField.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        rainWaterStorageTankTextField.setText("<<Value>>");

        summaryBtn.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        summaryBtn.setText("Summary");
        summaryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryBtnActionPerformed(evt);
            }
        });

        myProfileBtn.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        myProfileBtn.setText("My Profile");
        myProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myProfileBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(summaryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(299, 299, 299)
                                .addComponent(myProfileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(trackUsageBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(141, 141, 141)
                                .addComponent(energyOptRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(208, 208, 208)
                                        .addComponent(jLabel3)))
                                .addGap(18, 18, 18)
                                .addComponent(rainWaterStorageTankTextField)))))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(rainWaterStorageTankTextField))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(trackUsageBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(energyOptRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myProfileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(summaryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 906, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 544, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

        public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)requestTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : account.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getCustomer().getCustomerName();
            row[2] = request.getStatus();
            row[3] = request.getClass().getSimpleName();
            
            model.addRow(row);

        }
    }

    
    private void energyOptRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_energyOptRequestBtnActionPerformed
        // TODO add your handling code here:
        EnergyOptimizationRequest request = new EnergyOptimizationRequest();
        request.setCustomer(account.getCustomer());
        request.setCustomerRequest("Energy Optimization ");
        request.setMessage("Energy Optimization " );
        request.setStatus("Sent");
        request.setPriority(2);
        request.setSender(account);
        request.setRequestDate(new Date());
         Organization org = null;
        for (Organization organization : enterprise.getOrganizationsList().getOrganizationList()){
            if (organization instanceof EnergyOptimizationUnitOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
            
        }
        JOptionPane.showMessageDialog(null, "Optimization request has been sent. Please check the Status in your request table", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
        populateTable();

    }//GEN-LAST:event_energyOptRequestBtnActionPerformed

    private void trackUsageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackUsageBtnActionPerformed
        // TODO add your handling code here:
        CommercialCustomerTrackWaterUsageJPanel customerTrackWaterUsageJPanel = new CommercialCustomerTrackWaterUsageJPanel(userProcessContainer,enterprise,account);
        userProcessContainer.add("customerTrackWaterUsageJPanel", customerTrackWaterUsageJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer); 
    }//GEN-LAST:event_trackUsageBtnActionPerformed

    private void summaryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryBtnActionPerformed
        // TODO add your handling code here:
        CommercialCustomerSummaryJPanel customerSummaryJPanel = new CommercialCustomerSummaryJPanel(userProcessContainer,enterprise,account);
        userProcessContainer.add("customerSummaryJPanel", customerSummaryJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_summaryBtnActionPerformed

    private void myProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myProfileBtnActionPerformed
        // TODO add your handling code here:
        ViewCommercialCustomerProfileJPanel viewCommercialCustomerProfileJPanel = new ViewCommercialCustomerProfileJPanel(userProcessContainer,account,enterprise);
         userProcessContainer.add("viewCommercialCustomerProfileJPanel", viewCommercialCustomerProfileJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_myProfileBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton energyOptRequestBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton myProfileBtn;
    private javax.swing.JLabel rainWaterStorageTankTextField;
    private javax.swing.JTable requestTable;
    private javax.swing.JButton summaryBtn;
    private javax.swing.JButton trackUsageBtn;
    // End of variables declaration//GEN-END:variables
}
