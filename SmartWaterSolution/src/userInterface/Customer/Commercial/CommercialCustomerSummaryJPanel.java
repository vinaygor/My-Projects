/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Customer.Commercial;

import business.enterprise.Enterprise;
import business.userAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.Date;
import java.util.Map.Entry;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author ayush
 */
public class CommercialCustomerSummaryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommercialCustomerSummaryJPanel
     */
   
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount account;
    private String[][] waterOutletDetails;
    private String[][] totalWaterUsage;
    
    private int size;

    public CommercialCustomerSummaryJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account) 
    {       
        initComponents(); 
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account = account;
        int mapSize=account.getCustomer().getConsumer().getTrackWaterUsageMap().size();
        size=account.getCustomer().getConsumer().getWaterOutlets().getWaterOutlets().size();
        
        waterOutletDetails = new String[mapSize][3];
        int number=0;
        for(Entry<Date, String> entry : account.getCustomer().getConsumer().getTrackWaterUsageMap().entrySet())  
        {
          Date key = entry.getKey();
          String value = entry.getValue();
          String[] waterOulet =value.split(",");
          String waterOutletName = waterOulet[0];
          String waterOutletUsage = waterOulet[1];
        //System.out.println("inside "); 
          waterOutletDetails[number][0]=key.toString();
          waterOutletDetails[number][1]=waterOutletName;
          waterOutletDetails[number][2]=waterOutletUsage;
          number++;
          //System.out.println(key + " " + value);
        }
        calculateOverallUsage();
        
    }
    
    public void calculateOverallUsage(){
        totalWaterUsage= new String[size][2];
        for(int i=0;i<size;i++){
            totalWaterUsage[i][0]=account.getCustomer().getConsumer().getWaterOutlets().getWaterOutlets().get(i).toString();
            totalWaterUsage[i][1]=Double.toString(0);
        }
        
        for(int i=0;i<size;i++)
        {
            for(int j=0;j<waterOutletDetails.length;j++)
            {
                if(totalWaterUsage[i][0].equals(waterOutletDetails[j][1]))
                {
//                    if(totalWaterUsage[i][1]==null)
//                    totalWaterUsage[i][1]=Double.toString(0+Double.parseDouble(waterOutletDetails[j][2]));
//                    else
                    totalWaterUsage[i][1]=Double.toString(Double.parseDouble(totalWaterUsage[i][1])+Double.parseDouble(waterOutletDetails[j][2]));    
                }
            }
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        waterOutletGraphBtn = new javax.swing.JButton();
        pieChartBtn = new javax.swing.JButton();
        billingDetailsBtn = new javax.swing.JButton();
        energyUtilizationGraphBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        backBtn = new javax.swing.JButton();

        waterOutletGraphBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        waterOutletGraphBtn.setText("Water Outlet Usage Graph");
        waterOutletGraphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waterOutletGraphBtnActionPerformed(evt);
            }
        });

        pieChartBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        pieChartBtn.setText("Pie Chart for Storage Tank Vs RainWater Tank Usage");
        pieChartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pieChartBtnActionPerformed(evt);
            }
        });

        billingDetailsBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        billingDetailsBtn.setText("Billing Details");
        billingDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billingDetailsBtnActionPerformed(evt);
            }
        });

        energyUtilizationGraphBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        energyUtilizationGraphBtn.setText("Energy Utilization Graph");
        energyUtilizationGraphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                energyUtilizationGraphBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 24)); // NOI18N
        jLabel1.setText("Customer Usage Summary");

        backBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        backBtn.setText("<< BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(billingDetailsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pieChartBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(waterOutletGraphBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(energyUtilizationGraphBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(waterOutletGraphBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pieChartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(energyUtilizationGraphBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(billingDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void waterOutletGraphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waterOutletGraphBtnActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        account.getCustomer().getConsumer().getTrackWaterUsageMap();
        
        for(int i=0;i<totalWaterUsage.length;i++){
            dataset.addValue(Double.parseDouble(totalWaterUsage[i][1]), "Water Outlet Usage", totalWaterUsage[i][0]);
        }
        
        JFreeChart chart = ChartFactory.createBarChart("Water Outlet Usage Details", "Water Outlet Name", "Water Utilization", dataset, PlotOrientation.VERTICAL, false, false, false);
        CategoryPlot p =chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLACK);
        ChartFrame frame = new ChartFrame("Bar Chart for Water Outlet Usage", chart);
        frame.setVisible(true);
        frame.setSize(500, 400);

    }//GEN-LAST:event_waterOutletGraphBtnActionPerformed

    private void pieChartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pieChartBtnActionPerformed
        // TODO add your handling code here:
        DefaultPieDataset dataset = new DefaultPieDataset();
        dataset.setValue("Storage Tank Utilization "+account.getCustomer().getStorageTankUtilization(), account.getCustomer().getStorageTankUtilization());
        dataset.setValue("Rain Water Tank Utilization "+account.getCustomer().getRainWaterTankUtilization(), account.getCustomer().getRainWaterTankUtilization());
        JFreeChart chart = ChartFactory.createPieChart("Pie Chart", dataset);
        

        ChartFrame frame = new ChartFrame("Utilization Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(500, 400);
        
    }//GEN-LAST:event_pieChartBtnActionPerformed

    private void billingDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billingDetailsBtnActionPerformed
        // TODO add your handling code here:
        CommercialCustomerBillingDetailsJPanel customerBillingDetailsJPanel = new CommercialCustomerBillingDetailsJPanel(userProcessContainer,enterprise,account);
        userProcessContainer.add("customerBillingDetailsJPanel", customerBillingDetailsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_billingDetailsBtnActionPerformed

    private void energyUtilizationGraphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_energyUtilizationGraphBtnActionPerformed
        // TODO add your handling code here:
        if(account.getCustomer().getConsumer().getPumpConfiguration().isIsOptimized())
        {
        XYSeries series1 = new XYSeries("Old Energy Consumption");
        double oldEnergy = account.getCustomer().getConsumer().getPumpConfiguration().getOldEnergy();
        double optimizedEnergy = account.getCustomer().getConsumer().getPumpConfiguration().getOptimizedEnergy();
        XYSeries series2 = new XYSeries("Optimized Energy Consumption");
        double x1,y1,x2,y2;
        for(int i =0;i<waterOutletDetails.length;i++)
        {
            x1 = Double.parseDouble(waterOutletDetails[i][2]);
            y1 = (x1/oldEnergy) + 0.5;
            series1.add(x1,y1);
            
            x2 = Double.parseDouble(waterOutletDetails[i][2]);
            y2 = (x2/optimizedEnergy) + 0.5;
            series2.add(x2,y2);
                
        }
        
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series1);
        dataset.addSeries(series2);
        
        JFreeChart chart = ChartFactory.createXYLineChart("Energy Consumption Against Water Utilization","Water Utilization "
                , "Energy Consumption", dataset);
        
        chart.setBackgroundPaint(Color.white);
        
        XYPlot plot = chart.getXYPlot();
        plot.setBackgroundPaint(Color.white);
        plot.setDomainGridlinePaint(Color.lightGray);
        plot.setRangeGridlinePaint(Color.lightGray);
        
        
        ChartFrame frame = new ChartFrame("Enery Consumption Chart", chart);
        frame.setVisible(true);
        frame.setSize(500, 400);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Energy Optimization Process is not being implemented","Warning",0);
        }
        
        
        
    }//GEN-LAST:event_energyUtilizationGraphBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton billingDetailsBtn;
    private javax.swing.JButton energyUtilizationGraphBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton pieChartBtn;
    private javax.swing.JButton waterOutletGraphBtn;
    // End of variables declaration//GEN-END:variables
}
