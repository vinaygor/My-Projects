/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.MaintainanceRole;

import business.EcoSystems;
import business.organization.CommercialMaintainenceUnitOrganization;
import business.organization.CommercialRainWaterHarvestingUnitOrganization;
import business.organization.Organization;
import business.organization.ResidentialMaintainenceUnitOrganization;
import business.organization.ResidentialRainWaterHarvestingUnitOrganization;
import business.userAccount.UserAccount;
import business.workqueue.Maintainence.MaintainenceRequest;
import business.workqueue.RainWaterHarvesting.RainWaterHarvestingRequest;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userInterface.RainWaterHarvesting.RainWaterHarvestingProcessRequestJPanel;

/**
 *
 * @author ayush
 */
public class MaintainanceRoleWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MaintainanceRoleWorkAreaJPanel
     */
    
    private JPanel userProcessContainer;
    private  UserAccount account;
    private Organization organization;
    private EcoSystems business;
    
    public MaintainanceRoleWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystems business) {
        initComponents();
            this.userProcessContainer=userProcessContainer;
        this.account=account;
        if(organization instanceof CommercialMaintainenceUnitOrganization)
        this.organization=(CommercialMaintainenceUnitOrganization)organization;
        else
        this.organization=(ResidentialMaintainenceUnitOrganization)organization;    
        this.business=business;
        populateTable();
    }

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)employeeRequestTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getCustomer().getCustomerName();
            row[2] = request.getStatus();
            row[3]=request.getPriority();
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        employeeRequestTable = new javax.swing.JTable();
        processRequest = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();

        employeeRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Status", "Priority"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(employeeRequestTable);
        if (employeeRequestTable.getColumnModel().getColumnCount() > 0) {
            employeeRequestTable.getColumnModel().getColumn(0).setResizable(false);
            employeeRequestTable.getColumnModel().getColumn(1).setResizable(false);
            employeeRequestTable.getColumnModel().getColumn(2).setResizable(false);
            employeeRequestTable.getColumnModel().getColumn(3).setResizable(false);
        }

        processRequest.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        processRequest.setText("Process Request");
        processRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processRequestActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 20)); // NOI18N
        jLabel3.setText("Rainwater Maintainance Work Area");

        jLabel4.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel4.setText("My Requests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(processRequest))
                        .addGap(0, 59, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(processRequest)
                .addContainerGap(127, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void processRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processRequestActionPerformed
        // TODO add your handling code here:
         int selectedRow = employeeRequestTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        
        MaintainenceRequest request = (MaintainenceRequest)employeeRequestTable.getValueAt(selectedRow, 0);
        if(!request.getStatus().equalsIgnoreCase("completed"))
        {
            request.setStatus("Processing");
            MaintainanceProcessRequestJPanel maintainanceProcessRequestJPanel = new MaintainanceProcessRequestJPanel(userProcessContainer, request);
            userProcessContainer.add("maintainanceProcessRequestJPanel", maintainanceProcessRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        }
        else
            JOptionPane.showMessageDialog(null, "Process has already been resolved!", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_processRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable employeeRequestTable;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton processRequest;
    // End of variables declaration//GEN-END:variables
}
