/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.MaintainanceRole;

import business.consumer.StorageTank;
import business.organization.Customer.Customer;
import business.workqueue.Maintainence.MaintainenceRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;

import javax.swing.JPanel;

/**
 *
 * @author ayush
 */
public class MaintainanceProcessRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MaintainanceProcessRequestJPanel
     */
    private JPanel userProcessContainer;
    private MaintainenceRequest request;
    
    public MaintainanceProcessRequestJPanel(JPanel userProcessContainer, MaintainenceRequest request) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
         this.request=request;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentsTxtArea = new javax.swing.JTextArea();
        backBtn = new javax.swing.JButton();
        submitBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 20)); // NOI18N
        jLabel1.setText("Maintainance Process Request");

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 20)); // NOI18N
        jLabel2.setText("Comments");

        commentsTxtArea.setColumns(20);
        commentsTxtArea.setRows(5);
        jScrollPane1.setViewportView(commentsTxtArea);

        backBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        submitBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(backBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitBtn)
                    .addComponent(backBtn))
                .addGap(52, 52, 52))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        String comments = commentsTxtArea.getText();
        if(comments.equals("")){
            JOptionPane.showMessageDialog(null,"Please enter the resolution in the comments section","Warning",1);
        }
        else{
        if(request.getMessage().contains("Update")){
            
            if(request.getAccount().getCustomer().getCustomerType().contains("Commercial")){
                Customer c=request.getSender().getCustomer();
            c.getConsumer().setWaterOutlets(request.getTempWaterOutlet());
            int count=request.getCustomer().getConsumer().getStorageTanks().size();
            
            request.getCustomer().getConsumer().getStorageTanks().clear();
          //  c.getConsumer().initStorageTanks(request.getCapacity(), request.getDimensions(), WIDTH);
            
          ArrayList<StorageTank> sts = request.getCustomer().getConsumer().getStorageTanks();
          
          for(int i=0;i<request.getTotalStorageTanks();i++){
              StorageTank storageTank = new StorageTank();
              storageTank.setCapacity(Double.parseDouble(request.getCapacity()));
              storageTank.setTotalCapacity(Double.parseDouble(request.getCapacity()));
              sts.add(storageTank);
          }
          
          request.getCustomer().getConsumer().setStorageTanks(sts);
            request.getAccount().setPassword(request.getPassword());
            request.setStatus("Completed");
            
                       
            request.setCustomerRequest("Completed");
            request.setStatus("Completed");
            JOptionPane.showMessageDialog(null, "Maintenance request has been resolved","Confirmation",1);
            }
            else{
            Customer c=request.getSender().getCustomer();
            c.getConsumer().setWaterOutlets(request.getTempWaterOutlet());
            c.getConsumer().getStorageTank().setCapacity(Double.parseDouble(request.getCapacity()));
            c.getConsumer().getStorageTank().setTotalCapacity(Double.parseDouble(request.getCapacity()));
            request.getAccount().setPassword(request.getPassword());
            request.setStatus("Completed");
            
            JOptionPane.showMessageDialog(null, "Account Details has been updated","Confirmation",1);
            
            request.setCustomerRequest("Completed");
            request.setStatus("Completed");
            
            commentsTxtArea.setText("");
            }
        }
        else{
                        
            request.setCustomerRequest("Completed");
            request.setStatus("Completed");
            JOptionPane.showMessageDialog(null, "Maintenance request has been resolved","Confirmation",1);
            commentsTxtArea.setText("");
        }
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        MaintainanceRoleWorkAreaJPanel dwjp = (MaintainanceRoleWorkAreaJPanel) component;
        dwjp.populateTable();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextArea commentsTxtArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
}
