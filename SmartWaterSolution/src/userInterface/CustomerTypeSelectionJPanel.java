/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import business.EcoSystems;
import business.enterprise.Enterprise;
import business.network.Network;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userInterface.AdminRole.CommercialEnterprise.CommercialCreateCustomerJPanel;
import userInterface.AdminRole.ResidentialEnterprise.ResidentialCreateCustomerJPanel;

/**
 *
 * @author vinay
 */
public class CustomerTypeSelectionJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerTypeSelectionJPanel
     */
   private JPanel container;
   private EcoSystems system;
   
   public CustomerTypeSelectionJPanel(JPanel container,EcoSystems system) {
   initComponents();
   this.container=container;
   this.system=system;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        commercialTypeBtn = new javax.swing.JButton();
        residentialTypeBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 24)); // NOI18N
        jLabel1.setText("Type of Customer Account");

        commercialTypeBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 20)); // NOI18N
        commercialTypeBtn.setText("Commercial Type Customer");
        commercialTypeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commercialTypeBtnActionPerformed(evt);
            }
        });

        residentialTypeBtn.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 20)); // NOI18N
        residentialTypeBtn.setText("Residential Type Customer");
        residentialTypeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                residentialTypeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(commercialTypeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(residentialTypeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(commercialTypeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(residentialTypeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(379, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void commercialTypeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commercialTypeBtnActionPerformed
        // TODO add your handling code here:
        String name = "Network";
       
          //  System.out.println("Inside Try");
        for(Network network : system.getNetworkList()){
            name = "Enterprise";
            //System.out.println("Inside Network");
            for(Enterprise enterprise : network.getEnterpriseList().getEnterpriseList()){
                if(enterprise.getEnterpriseType().getValue().contains("Commercial")){
                    name="";
              //      System.out.println("Inside Residential");
                    CommercialCreateCustomerJPanel commercialCreateCustomerJPanel = new CommercialCreateCustomerJPanel(container,enterprise,system);
        container.add("commercialCreateCustomerJPanel", commercialCreateCustomerJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
                }
                    
            }
        }
        
        
           if(name.equals("Enterprise"))
               JOptionPane.showMessageDialog(null, "Sorry, but the Enterprise has not yet been created");
           else if(name.equals("Network"))
               JOptionPane.showMessageDialog(null, "Sorry, but the Network has not yet been created");
        
    }//GEN-LAST:event_commercialTypeBtnActionPerformed

    private void residentialTypeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_residentialTypeBtnActionPerformed
        // TODO add your handling code here:
        String name = "Network";
       
        
        for(Network network : system.getNetworkList()){
            name = "Enterprise";
            for(Enterprise enterprise : network.getEnterpriseList().getEnterpriseList()){
                if(enterprise.getEnterpriseType().getValue().contains("Residential")){
                     name="";
                    ResidentialCreateCustomerJPanel createCustomerJPanel = new ResidentialCreateCustomerJPanel(container,enterprise,system);
        container.add("createCustomerJPanel", createCustomerJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
                }
                    
            }
        }
         if(name.equals("Enterprise"))
               JOptionPane.showMessageDialog(null, "Sorry, but the Enterprise has not yet been created");
           else if(name.equals("Network"))
               JOptionPane.showMessageDialog(null, "Sorry, but the Network has not yet been created");
        
    }//GEN-LAST:event_residentialTypeBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton commercialTypeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton residentialTypeBtn;
    // End of variables declaration//GEN-END:variables
}
